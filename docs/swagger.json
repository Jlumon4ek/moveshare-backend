{
    "swagger": "2.0",
    "info": {
        "description": "API для приложения MoveShare",
        "title": "MoveShare API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/admin/analytics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets platform analytics including top companies and busiest routes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get platform analytics",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Number of days to look back",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PlatformAnalytics"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/conversations/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets the total number of chat conversations in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get total chat conversation count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets a paginated list of jobs with limit, offset and optional status filter",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of jobs returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by job status. Single status or comma-separated multiple (claimed, active, pending, canceled, completed)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedJobsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/jobs/active/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets the total number of active jobs (not completed) in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get active jobs count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/settings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets the current system settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get system settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SystemSettings"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the system settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update system settings",
                "parameters": [
                    {
                        "description": "System settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SystemSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SystemSettings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/user/{userID}/full-info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets complete user information including company, trucks, jobs, reviews, payments, and verification",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get full user information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserFullInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/user/{userID}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Changes the status of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Change user status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "Verified Mover",
                            "Banned",
                            "On waiting"
                        ],
                        "type": "string",
                        "description": "New status for the user",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets a paginated list of users with limit and offset",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get list of users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of users returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedUsersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets the total number of users in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get total user count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/pending/count": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets the total number of users with \"On Waiting\" status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get pending users count",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/admin/verification/file/{fileID}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Администратор изменяет статус конкретного файла верификации пользователя",
                "tags": [
                    "Admin"
                ],
                "summary": "Изменить статус файла верификации",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID файла",
                        "name": "fileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "Approved",
                            "Rejected",
                            "Pending"
                        ],
                        "type": "string",
                        "description": "Новый статус (например, approved, rejected)",
                        "name": "status",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/auth/change-password": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Change the password for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.ChangePasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Current password is incorrect",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Terminates the current user session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "description": "Validates refresh token and returns a new access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user_id and access_token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "Authenticates user with email/username and password, returns JWT tokens",
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticate user",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignInRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Creates a new user account with username, email and password",
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/chats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a list of all chats for the authenticated user with preview of last message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get user chats",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit number of chats returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chats/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new chat conversation between two users for a specific job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Create a new chat",
                "parameters": [
                    {
                        "description": "Chat creation data",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.CreateChatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/chat.CreateChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/mark-read": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark all unread messages in a chat as read for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Mark messages as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/messages": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns messages for a specific chat with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Get chat messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 30,
                        "description": "Limit number of messages returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Order of messages",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sends a new message to the specified chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat"
                ],
                "summary": "Send message to chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message data",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chat.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/chat.SendMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/chats/{chatId}/ws": {
            "get": {
                "description": "Establishes WebSocket connection for real-time chat messaging",
                "tags": [
                    "Chat"
                ],
                "summary": "WebSocket connection for chat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Chat ID",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token for authentication",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/commission-rate": {
            "get": {
                "description": "Gets the current platform commission rate that users can see",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get platform commission rate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number",
                                "format": "float64"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/company/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает компанию, связанную с текущим пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Получить информацию о компании",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CompanyResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Частично обновляет компанию, связанную с текущим пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Company"
                ],
                "summary": "Обновить информацию о компании",
                "parameters": [
                    {
                        "description": "Данные для обновления компании",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateCompanyRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/forgot-password": {
            "post": {
                "description": "Send password reset code to user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Request password reset",
                "parameters": [
                    {
                        "description": "Email address",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ForgotPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/available": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves available jobs with optional filtering and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get available jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of bedrooms filter",
                        "name": "number_of_bedrooms",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pickup address filter",
                        "name": "origin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Delivery address filter",
                        "name": "destination",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum distance in miles",
                        "name": "max_distance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date filter (YYYY-MM-DD)",
                        "name": "pickup_date_start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date filter (YYYY-MM-DD)",
                        "name": "pickup_date_end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "\"Small Large\"",
                        "description": "Truck size filter (space-separated for multiple)",
                        "name": "truck_size",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Minimum payout amount",
                        "name": "payout_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Maximum payout amount",
                        "name": "payout_max",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available jobs with pagination and applied filters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/jobs/cancel-jobs": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancels multiple jobs by changing their status to 'cancelled'",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Cancel multiple jobs",
                "parameters": [
                    {
                        "description": "Job IDs to cancel",
                        "name": "cancel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CancelJobsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Jobs cancelled successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/claim-job/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows a user to claim an available job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Claim a job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job claimed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/claimed": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves jobs claimed by the authenticated user with pagination and chat creation status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get claimed jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claimed jobs with pagination and chat status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/delete-job/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a job posting (only by job owner)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Delete a job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/export": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Exports specified jobs to CSV format for download",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Export jobs to CSV",
                "parameters": [
                    {
                        "description": "Job IDs to export",
                        "name": "export",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExportJobsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CSV file with job data",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "No jobs found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/filter-options/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets available filter options for jobs (unique values)",
                "tags": [
                    "Jobs"
                ],
                "summary": "Get filter options",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.JobFilterOptions"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/mark-job-completed/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marks a job as completed by the user who claimed it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Mark job as completed",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job marked as completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/my-jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves jobs created by the authenticated user with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get my jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User's jobs with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/pending-jobs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves jobs that the authenticated user has claimed but not completed, sorted by pickup date (closest first)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get pending jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pending jobs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/post-new-job": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new job posting for moving services with required payment processing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Create a new job with payment",
                "parameters": [
                    {
                        "description": "Job creation data with payment",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateJobWithPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Job created successfully with payment processed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "402": {
                        "description": "Payment required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves job statistics for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get job statistics",
                "responses": {
                    "200": {
                        "description": "Job statistics",
                        "schema": {
                            "$ref": "#/definitions/models.JobsStats"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/today-schedule": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves today's jobs for the authenticated user (as executor) sorted by pickup time",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get today's schedule jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Today's schedule jobs with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/upload-files/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads files for a job that the user has claimed and changes status to pending",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Upload files for a claimed job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Files to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - job not claimed by user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/upload-verification-documents/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads verification documents for a job that the user has claimed and changes status to pending",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Upload verification documents for a claimed job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Verification documents to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documents uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - job not claimed by user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/upload-work-photos/{id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads work photos for a job that the user has claimed and changes status to pending",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Upload work photos for a claimed job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Work photos to upload",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photos uploaded successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - job not claimed by user",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/user-work-stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves work statistics for the authenticated user (jobs they applied to)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get user work statistics",
                "responses": {
                    "200": {
                        "description": "User work statistics",
                        "schema": {
                            "$ref": "#/definitions/models.UserWorkStats"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific job by its ID with contractor information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get job by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job details with contractor username, status and average rating",
                        "schema": {
                            "$ref": "#/definitions/models.Job"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/{id}/files": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all files uploaded for a specific job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get files for a specific job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job files",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/jobs/{id}/files/by-type": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves files uploaded for a specific job filtered by file type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jobs"
                ],
                "summary": "Get files for a specific job by type",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "verification_document",
                            "work_photo"
                        ],
                        "type": "string",
                        "description": "File type",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job files by type",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/location/cities": {
            "get": {
                "description": "Retrieves a list of cities, optionally filtered by state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location"
                ],
                "summary": "Get cities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "State ID to filter cities",
                        "name": "state_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of cities",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.CityWithState"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/location/states": {
            "get": {
                "description": "Retrieves a list of all available states",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location"
                ],
                "summary": "Get all states",
                "responses": {
                    "200": {
                        "description": "List of states",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/models.State"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a paginated list of notifications for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit number of notifications returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "job_application",
                            "job_update",
                            "payment",
                            "document_upload",
                            "new_job",
                            "review",
                            "message",
                            "system"
                        ],
                        "type": "string",
                        "description": "Filter by notification type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Show only unread notifications",
                        "name": "unread",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NotificationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes all notifications for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete all notifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/read-all": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marks all notifications as read for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark all notifications as read",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns notification statistics for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notification statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NotificationStats"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/test": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sends a test notification to the current user (for development)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Send test notification",
                "parameters": [
                    {
                        "enum": [
                            "message",
                            "job",
                            "system"
                        ],
                        "type": "string",
                        "default": "system",
                        "description": "Notification type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "Test notification",
                        "description": "Notification message",
                        "name": "message",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/ws": {
            "get": {
                "description": "Establishes WebSocket connection for real-time notifications",
                "tags": [
                    "Notifications"
                ],
                "summary": "WebSocket connection for notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT token for authentication",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/notifications/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a specific notification for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{id}/read": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Marks a specific notification as read for the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Notification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/cards": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets all active payment cards for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Get user payment cards",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new payment card for the authenticated user using Stripe Payment Method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Add a payment card",
                "parameters": [
                    {
                        "description": "Payment method data",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddCardRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AddCardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/cards/{cardId}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a payment card for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Delete a payment card",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "cardId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/cards/{cardId}/default": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Sets a payment card as the default for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Set default payment card",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Card ID",
                        "name": "cardId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/confirm-payment": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Confirms a payment intent after user completes 3D Secure or other authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Confirm a payment",
                "parameters": [
                    {
                        "description": "Payment confirmation data",
                        "name": "confirmation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ConfirmPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ConfirmPaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/create-intent": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a payment intent for a job using user's saved card",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Create a payment",
                "parameters": [
                    {
                        "description": "Payment data",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CreatePaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Gets paginated payment history for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Get payment history",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of payments returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "description": "Reset user password using email, code and new password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Reset password with code",
                "parameters": [
                    {
                        "description": "Reset password data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ResetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reviews": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new review for a completed job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review",
                "parameters": [
                    {
                        "description": "Review creation data",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/average/{id}": {
            "get": {
                "description": "Retrieves the average rating and total review count for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get user average rating",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User average rating and review count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/job/{id}/check": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if the current user has already submitted a review for the specified job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Check if review exists for job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review existence check result",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/stats/{id}": {
            "get": {
                "description": "Retrieves detailed rating statistics for a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get user rating statistics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User rating statistics",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/models.UserRatingStats"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/user/{id}": {
            "get": {
                "description": "Retrieves reviews for a specific user with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reviews"
                ],
                "summary": "Get user reviews",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User reviews with pagination",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/trucks/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all trucks associated with the authenticated user.",
                "tags": [
                    "Trucks"
                ],
                "summary": "Get trucks for the authenticated user",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a truck associated with the authenticated user and uploads photos.",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Trucks"
                ],
                "summary": "Create a new truck",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Truck Name",
                        "name": "truck_name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "License Plate",
                        "name": "license_plate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Make",
                        "name": "make",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Model",
                        "name": "model",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Year",
                        "name": "year",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Color",
                        "name": "color",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Length (ft)",
                        "name": "length",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Width (ft)",
                        "name": "width",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Height (ft)",
                        "name": "height",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Max Weight (lbs)",
                        "name": "max_weight",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "enum": [
                            "Small",
                            "Medium",
                            "Large"
                        ],
                        "type": "string",
                        "description": "Truck Type",
                        "name": "truck_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Climate Control",
                        "name": "climate_control",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Liftgate",
                        "name": "liftgate",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Pallet Jack",
                        "name": "pallet_jack",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Security System",
                        "name": "security_system",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Refrigerated",
                        "name": "refrigerated",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Furniture Pads",
                        "name": "furniture_pads",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "file"
                        },
                        "collectionFormat": "csv",
                        "description": "Truck photo(s)",
                        "name": "photo",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/trucks/{truckId}/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a truck by its ID",
                "tags": [
                    "Trucks"
                ],
                "summary": "Get truck by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "truckId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a truck by its ID",
                "tags": [
                    "Trucks"
                ],
                "summary": "Delete a truck",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Truck ID",
                        "name": "truckId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/user/active-sessions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all active sessions for the current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Get user's active sessions",
                "responses": {
                    "200": {
                        "description": "active sessions",
                        "schema": {
                            "$ref": "#/definitions/models.ActiveSessionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/my-profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the profile information of the currently authenticated user including updated_at",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "user profile",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/my-status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the status of the currently authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get current user status",
                "responses": {
                    "200": {
                        "description": "user status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/profile-photo": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes the authenticated user's profile photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete profile photo",
                "responses": {
                    "200": {
                        "description": "Photo deleted successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "No profile photo to delete",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/profile-photo/{user_id}": {
            "get": {
                "description": "Retrieves a presigned URL for a user's profile photo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user profile photo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile photo URL",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid user ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "User or photo not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/sessions/terminate-all": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Terminates all user sessions except the current one",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Terminate all sessions except current",
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/sessions/{session_id}/terminate": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Terminates a specific session by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Session"
                ],
                "summary": "Terminate a specific session",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/upload-profile-photo": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads a profile photo for the authenticated user (max 5MB, JPG/JPEG/PNG/GIF only)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Upload profile photo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Profile photo file (max 5MB)",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo uploaded successfully",
                        "schema": {
                            "$ref": "#/definitions/models.UploadPhotoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid file type or size",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/verification/": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Uploads a verification file associated with the authenticated user.",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Create a new verification file",
                "parameters": [
                    {
                        "enum": [
                            "MC License",
                            "DOT Certificate",
                            "Insurance Certificate",
                            "Business License"
                        ],
                        "type": "string",
                        "description": "File Type",
                        "name": "fileType",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Verification file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/verification/files": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список файлов, загруженных пользователем для верификации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verification"
                ],
                "summary": "Получить файлы верификации пользователя",
                "responses": {
                    "200": {
                        "description": "Список файлов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.VerificationFile"
                            }
                        }
                    }
                }
            }
        },
        "/verify-reset-code": {
            "post": {
                "description": "Verify if the provided reset code is valid and not expired",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify password reset code",
                "parameters": [
                    {
                        "description": "Email and code",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VerifyResetCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.VerifyResetCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.VerifyResetCodeResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "auth.ChangePasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "chat.CreateChatRequest": {
            "type": "object",
            "required": [
                "job_id",
                "participant_id"
            ],
            "properties": {
                "job_id": {
                    "type": "integer",
                    "example": 123
                },
                "participant_id": {
                    "type": "integer",
                    "example": 456
                }
            }
        },
        "chat.CreateChatResponse": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "chat.SendMessageRequest": {
            "type": "object",
            "required": [
                "message_text"
            ],
            "properties": {
                "message_text": {
                    "type": "string",
                    "example": "Привет! Интересует ваше предложение."
                },
                "message_type": {
                    "type": "string",
                    "example": "text"
                }
            }
        },
        "chat.SendMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "$ref": "#/definitions/models.ChatMessageResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.CompanyResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "city": {
                    "type": "string",
                    "example": "Los Angeles"
                },
                "company_description": {
                    "type": "string",
                    "example": "A brief description of the company"
                },
                "company_name": {
                    "type": "string",
                    "example": "Example Company"
                },
                "contact_person": {
                    "type": "string",
                    "example": "John Doe"
                },
                "dot_number": {
                    "type": "string",
                    "example": "DOT1234567"
                },
                "email_address": {
                    "type": "string",
                    "example": "example@company.com"
                },
                "mc_license_number": {
                    "type": "string",
                    "example": "123456"
                },
                "phone_number": {
                    "type": "string",
                    "example": "(123) 456-7890"
                },
                "state": {
                    "type": "string",
                    "example": "CA"
                },
                "zip_code": {
                    "type": "string",
                    "example": "90001"
                }
            }
        },
        "dto.UpdateCompanyRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "123 Main St"
                },
                "city": {
                    "type": "string",
                    "example": "Los Angeles"
                },
                "company_description": {
                    "type": "string",
                    "example": "A short description"
                },
                "company_name": {
                    "type": "string",
                    "example": "Example Company"
                },
                "contact_person": {
                    "type": "string",
                    "example": "John Doe"
                },
                "dot_number": {
                    "type": "string",
                    "example": "DOT1234567"
                },
                "mc_license_number": {
                    "type": "string",
                    "example": "123456"
                },
                "phone_number": {
                    "type": "string",
                    "example": "(123) 456-7890"
                },
                "state": {
                    "type": "string",
                    "example": "CA"
                },
                "zip_code": {
                    "type": "string",
                    "example": "90001"
                }
            }
        },
        "models.ActiveSessionsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserSessionResponse"
                    }
                }
            }
        },
        "models.AddCardRequest": {
            "type": "object",
            "required": [
                "payment_method_id"
            ],
            "properties": {
                "payment_method_id": {
                    "type": "string",
                    "example": "pm_1234567890"
                }
            }
        },
        "models.AddCardResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "payment_method": {
                    "$ref": "#/definitions/models.PaymentMethodResponse"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.BusyRoute": {
            "type": "object",
            "properties": {
                "delivery_address": {
                    "type": "string"
                },
                "jobs_count": {
                    "type": "integer"
                },
                "pickup_address": {
                    "type": "string"
                },
                "route": {
                    "type": "string"
                }
            }
        },
        "models.CancelJobsRequest": {
            "type": "object",
            "required": [
                "job_ids"
            ],
            "properties": {
                "job_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.ChatMessageResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_from_me": {
                    "type": "boolean"
                },
                "is_read": {
                    "type": "boolean"
                },
                "message_text": {
                    "type": "string"
                },
                "message_type": {
                    "type": "string"
                },
                "read_at": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "integer"
                },
                "sender_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CityWithState": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state_id": {
                    "type": "integer"
                },
                "state_name": {
                    "type": "string"
                }
            }
        },
        "models.Company": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "company_description": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dot_number": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mc_license_number": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "models.ConfirmPaymentRequest": {
            "type": "object",
            "required": [
                "payment_intent_id"
            ],
            "properties": {
                "payment_intent_id": {
                    "type": "string",
                    "example": "pi_1234567890"
                }
            }
        },
        "models.ConfirmPaymentResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.CreateJobWithPaymentRequest": {
            "type": "object",
            "required": [
                "delivery_address",
                "delivery_city",
                "delivery_date",
                "delivery_state",
                "delivery_time_from",
                "delivery_time_to",
                "job_type",
                "payment_amount",
                "pickup_address",
                "pickup_city",
                "pickup_date",
                "pickup_state",
                "pickup_time_from",
                "pickup_time_to",
                "truck_size"
            ],
            "properties": {
                "additional_services_description": {
                    "type": "string"
                },
                "bulky_items": {
                    "type": "boolean"
                },
                "cut_amount": {
                    "type": "number"
                },
                "delivery_address": {
                    "type": "string"
                },
                "delivery_building_type": {
                    "type": "string"
                },
                "delivery_city": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_floor": {
                    "type": "integer"
                },
                "delivery_state": {
                    "type": "string"
                },
                "delivery_time_from": {
                    "type": "string"
                },
                "delivery_time_to": {
                    "type": "string"
                },
                "delivery_walk_distance": {
                    "type": "string"
                },
                "distance_miles": {
                    "type": "number"
                },
                "estimated_crew_assistants": {
                    "type": "string"
                },
                "hoisting": {
                    "type": "boolean"
                },
                "inventory_list": {
                    "type": "boolean"
                },
                "job_type": {
                    "description": "Job details",
                    "type": "string"
                },
                "number_of_bedrooms": {
                    "type": "string"
                },
                "packing_boxes": {
                    "type": "boolean"
                },
                "payment_amount": {
                    "type": "number"
                },
                "payment_method_id": {
                    "description": "Payment information",
                    "type": "integer"
                },
                "pickup_address": {
                    "type": "string"
                },
                "pickup_building_type": {
                    "type": "string"
                },
                "pickup_city": {
                    "type": "string"
                },
                "pickup_date": {
                    "type": "string"
                },
                "pickup_floor": {
                    "type": "integer"
                },
                "pickup_state": {
                    "type": "string"
                },
                "pickup_time_from": {
                    "type": "string"
                },
                "pickup_time_to": {
                    "type": "string"
                },
                "pickup_walk_distance": {
                    "type": "string"
                },
                "truck_size": {
                    "type": "string"
                },
                "volume_cu_ft": {
                    "type": "number"
                },
                "weight_lbs": {
                    "type": "number"
                }
            }
        },
        "models.CreatePaymentRequest": {
            "type": "object",
            "required": [
                "amount_cents"
            ],
            "properties": {
                "amount_cents": {
                    "description": "$29.99",
                    "type": "integer",
                    "example": 2999
                },
                "description": {
                    "type": "string",
                    "example": "Payment for job posting"
                },
                "job_id": {
                    "description": "Опционально для отдельных платежей",
                    "type": "integer",
                    "example": 123
                },
                "payment_method_id": {
                    "description": "Опционально, если не указано - берем default",
                    "type": "integer",
                    "example": 456
                }
            }
        },
        "models.CreatePaymentResponse": {
            "type": "object",
            "properties": {
                "client_secret": {
                    "type": "string"
                },
                "payment_intent_id": {
                    "type": "string"
                },
                "requires_confirmation": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.CreateReviewRequest": {
            "type": "object",
            "required": [
                "job_id",
                "rating"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "job_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 1
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "models.ExportJobsRequest": {
            "type": "object",
            "required": [
                "job_ids"
            ],
            "properties": {
                "job_ids": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.ForgotPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "models.ForgotPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Job": {
            "type": "object",
            "properties": {
                "additional_services_description": {
                    "type": "string"
                },
                "bulky_items": {
                    "type": "boolean"
                },
                "contractor_id": {
                    "type": "integer"
                },
                "contractor_rating": {
                    "type": "number"
                },
                "contractor_status": {
                    "type": "string"
                },
                "contractor_username": {
                    "description": "Contractor info (only for detailed job view)",
                    "type": "string"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "cut_amount": {
                    "description": "Payment",
                    "type": "number"
                },
                "delivery_address": {
                    "description": "Delivery location",
                    "type": "string"
                },
                "delivery_building_type": {
                    "type": "string"
                },
                "delivery_city": {
                    "type": "string"
                },
                "delivery_date": {
                    "type": "string"
                },
                "delivery_floor": {
                    "type": "integer"
                },
                "delivery_state": {
                    "type": "string"
                },
                "delivery_time_from": {
                    "type": "string"
                },
                "delivery_time_to": {
                    "type": "string"
                },
                "delivery_walk_distance": {
                    "type": "string"
                },
                "distance_miles": {
                    "description": "Job info",
                    "type": "number"
                },
                "estimated_crew_assistants": {
                    "description": "Crew and truck",
                    "type": "string"
                },
                "executor_id": {
                    "type": "integer"
                },
                "executor_name": {
                    "type": "string"
                },
                "executor_rating": {
                    "type": "number"
                },
                "executor_username": {
                    "description": "Executor info (only for detailed job view)",
                    "type": "string"
                },
                "files": {
                    "description": "Files",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.JobFile"
                    }
                },
                "hoisting": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "inventory_list": {
                    "type": "boolean"
                },
                "job_status": {
                    "type": "string"
                },
                "job_type": {
                    "description": "Job details",
                    "type": "string"
                },
                "number_of_bedrooms": {
                    "type": "string"
                },
                "packing_boxes": {
                    "description": "Additional services",
                    "type": "boolean"
                },
                "payment_amount": {
                    "type": "number"
                },
                "pickup_address": {
                    "description": "Pickup location",
                    "type": "string"
                },
                "pickup_building_type": {
                    "type": "string"
                },
                "pickup_city": {
                    "type": "string"
                },
                "pickup_date": {
                    "description": "Schedule",
                    "type": "string"
                },
                "pickup_floor": {
                    "type": "integer"
                },
                "pickup_state": {
                    "type": "string"
                },
                "pickup_time_from": {
                    "type": "string"
                },
                "pickup_time_to": {
                    "type": "string"
                },
                "pickup_walk_distance": {
                    "type": "string"
                },
                "truck_size": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "volume_cu_ft": {
                    "type": "number"
                },
                "weight_lbs": {
                    "description": "Load details",
                    "type": "number"
                }
            }
        },
        "models.JobFile": {
            "type": "object",
            "properties": {
                "content_type": {
                    "type": "string"
                },
                "file_id": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "file_type": {
                    "description": "verification_document or work_photo",
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "integer"
                },
                "uploaded_at": {
                    "type": "string"
                }
            }
        },
        "models.JobFilterOptions": {
            "type": "object",
            "properties": {
                "date_range": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "description": "YYYY-MM-DD",
                            "type": "string"
                        },
                        "min": {
                            "description": "YYYY-MM-DD",
                            "type": "string"
                        }
                    }
                },
                "delivery_locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LocationOption"
                    }
                },
                "max_distance": {
                    "type": "number"
                },
                "number_of_bedrooms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "payout_range": {
                    "type": "object",
                    "properties": {
                        "max": {
                            "type": "number"
                        },
                        "min": {
                            "type": "number"
                        }
                    }
                },
                "pickup_locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.LocationOption"
                    }
                },
                "truck_sizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.JobManagementInfo": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payout": {
                    "type": "number"
                },
                "size": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.JobsStats": {
            "type": "object",
            "properties": {
                "active_jobs_count": {
                    "type": "integer"
                },
                "new_jobs_this_week": {
                    "type": "integer"
                },
                "status_distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.LocationOption": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Notification": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NotificationAction"
                    }
                },
                "chat_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_read": {
                    "type": "boolean"
                },
                "job_id": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "priority": {
                    "$ref": "#/definitions/models.NotificationPriority"
                },
                "read_at": {
                    "type": "string"
                },
                "related_user_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.NotificationType"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.NotificationAction": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "action type: 'view_job', 'open_chat', 'mark_read', etc.",
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "primary": {
                    "description": "is this the primary action",
                    "type": "boolean"
                },
                "url": {
                    "description": "URL to navigate to",
                    "type": "string"
                }
            }
        },
        "models.NotificationListResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Notification"
                    }
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "has_next": {
                            "type": "boolean"
                        },
                        "has_prev": {
                            "type": "boolean"
                        },
                        "limit": {
                            "type": "integer"
                        },
                        "offset": {
                            "type": "integer"
                        }
                    }
                },
                "total": {
                    "type": "integer"
                },
                "unread": {
                    "type": "integer"
                }
            }
        },
        "models.NotificationPriority": {
            "type": "string",
            "enum": [
                "low",
                "normal",
                "high",
                "urgent"
            ],
            "x-enum-varnames": [
                "NotificationPriorityLow",
                "NotificationPriorityNormal",
                "NotificationPriorityHigh",
                "NotificationPriorityUrgent"
            ]
        },
        "models.NotificationStats": {
            "type": "object",
            "properties": {
                "by_type": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "total": {
                    "type": "integer"
                },
                "unread": {
                    "type": "integer"
                }
            }
        },
        "models.NotificationType": {
            "type": "string",
            "enum": [
                "job_application",
                "job_update",
                "job_claimed",
                "job_completed",
                "payment",
                "document_upload",
                "new_job",
                "review",
                "message",
                "system"
            ],
            "x-enum-comments": {
                "NotificationTypeDocumentUpload": "Document uploaded",
                "NotificationTypeJobApplication": "Someone applied to your job",
                "NotificationTypeJobClaimed": "Your job was claimed",
                "NotificationTypeJobCompleted": "Job was completed",
                "NotificationTypeJobUpdate": "Job status changed",
                "NotificationTypeMessage": "New chat message",
                "NotificationTypeNewJob": "New job matching criteria",
                "NotificationTypePayment": "Payment related",
                "NotificationTypeReview": "New review received",
                "NotificationTypeSystem": "System announcements"
            },
            "x-enum-descriptions": [
                "Someone applied to your job",
                "Job status changed",
                "Your job was claimed",
                "Job was completed",
                "Payment related",
                "Document uploaded",
                "New job matching criteria",
                "New review received",
                "New chat message",
                "System announcements"
            ],
            "x-enum-varnames": [
                "NotificationTypeJobApplication",
                "NotificationTypeJobUpdate",
                "NotificationTypeJobClaimed",
                "NotificationTypeJobCompleted",
                "NotificationTypePayment",
                "NotificationTypeDocumentUpload",
                "NotificationTypeNewJob",
                "NotificationTypeReview",
                "NotificationTypeMessage",
                "NotificationTypeSystem"
            ]
        },
        "models.PaginatedJobsResponse": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.JobManagementInfo"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PaginatedUsersResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserCompanyInfo"
                    }
                }
            }
        },
        "models.Payment": {
            "type": "object",
            "properties": {
                "amount_cents": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "failure_reason": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "stripe_customer_id": {
                    "type": "string"
                },
                "stripe_payment_intent_id": {
                    "type": "string"
                },
                "stripe_payment_method_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.PaymentMethodResponse": {
            "type": "object",
            "properties": {
                "card_brand": {
                    "type": "string"
                },
                "card_exp_month": {
                    "type": "integer"
                },
                "card_exp_year": {
                    "type": "integer"
                },
                "card_last4": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_default": {
                    "type": "boolean"
                }
            }
        },
        "models.PlatformAnalytics": {
            "type": "object",
            "properties": {
                "busiest_routes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BusyRoute"
                    }
                },
                "top_companies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TopCompany"
                    }
                }
            }
        },
        "models.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "code",
                "email",
                "new_password"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        },
        "models.ResetPasswordResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "job_id": {
                    "type": "integer"
                },
                "rating": {
                    "description": "1-5 звезд",
                    "type": "integer"
                },
                "reviewee_id": {
                    "description": "исполнитель",
                    "type": "integer"
                },
                "reviewer_id": {
                    "description": "заказчик",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SignInRequest": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string",
                    "example": "Sabalaq"
                },
                "password": {
                    "type": "string",
                    "example": "Lineage6_"
                }
            }
        },
        "models.SignUpRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "zhanseriknurym@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "Lineage6_"
                },
                "username": {
                    "type": "string",
                    "example": "Sabalaq"
                }
            }
        },
        "models.State": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.SystemSettings": {
            "type": "object",
            "properties": {
                "commission_rate": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "job_expiration_days": {
                    "type": "integer"
                },
                "minimum_payout": {
                    "type": "integer"
                },
                "new_user_approval": {
                    "type": "string"
                }
            }
        },
        "models.TopCompany": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "jobs_count": {
                    "type": "integer"
                }
            }
        },
        "models.TruckSwagger": {
            "type": "object",
            "properties": {
                "climate_control": {
                    "type": "boolean"
                },
                "color": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "furniture_pads": {
                    "type": "boolean"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "length": {
                    "type": "number"
                },
                "license_plate": {
                    "type": "string"
                },
                "liftgate": {
                    "type": "boolean"
                },
                "make": {
                    "type": "string"
                },
                "max_weight": {
                    "type": "number"
                },
                "model": {
                    "type": "string"
                },
                "pallet_jack": {
                    "type": "boolean"
                },
                "photo_urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "refrigerated": {
                    "type": "boolean"
                },
                "security_system": {
                    "type": "boolean"
                },
                "truck_name": {
                    "type": "string"
                },
                "truck_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "width": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.UploadPhotoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "profile_photo_id": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "profile_photo_id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserCompanyInfo": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "trucks_number": {
                    "type": "integer"
                }
            }
        },
        "models.UserFullInfo": {
            "type": "object",
            "properties": {
                "company": {
                    "$ref": "#/definitions/models.Company"
                },
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Job"
                    }
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Payment"
                    }
                },
                "reviews": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Review"
                    }
                },
                "trucks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TruckSwagger"
                    }
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "verification": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.VerificationFile"
                    }
                }
            }
        },
        "models.UserRatingStats": {
            "type": "object",
            "properties": {
                "average_rating": {
                    "type": "number"
                },
                "five_stars": {
                    "type": "integer"
                },
                "four_stars": {
                    "type": "integer"
                },
                "one_star": {
                    "type": "integer"
                },
                "three_stars": {
                    "type": "integer"
                },
                "total_reviews": {
                    "type": "integer"
                },
                "two_stars": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.UserSessionResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "device_info": {
                    "description": "Formatted as \"Browser on OS\"",
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_current": {
                    "type": "boolean"
                },
                "last_activity": {
                    "type": "string"
                },
                "location_info": {
                    "description": "Formatted as \"City, Region\"",
                    "type": "string"
                }
            }
        },
        "models.UserWorkStats": {
            "type": "object",
            "properties": {
                "completed_jobs": {
                    "type": "integer"
                },
                "earnings": {
                    "type": "number"
                },
                "upcoming_jobs": {
                    "type": "integer"
                }
            }
        },
        "models.VerificationFile": {
            "type": "object",
            "properties": {
                "fileType": {
                    "type": "string"
                },
                "objectName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.VerifyResetCodeRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "models.VerifyResetCodeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "user.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter JWT token in format: Bearer {your_token_here}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}